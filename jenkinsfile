pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                echo 'Building the code...'
                // e.g., sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                // e.g., sh 'mvn test'
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analyzing the code...'
                // e.g., sh 'sonar-scanner'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Running security scan...'
                // e.g., sh 'npm audit'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging...'
                // e.g., sh 'scp target/*.jar user@staging-server:/app'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                // e.g., sh 'curl -s https://staging-server/api/test'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production...'
                // e.g., sh 'scp target/*.jar user@production-server:/app'
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
post {
    success {
        mail to: 'dondayaswanthsai@gmail.com',
             subject: "Pipeline Success: ${currentBuild.fullDisplayName}",
             body: "Pipeline completed successfully.\n\nLogs attached.",
             attachLog: true
    }
    failure {
        mail to: 'dondayaswanthsai@gmail.com',
             subject: "Pipeline Failure: ${currentBuild.fullDisplayName}",
             body: "Pipeline failed.\n\nLogs attached.",
             attachLog: true
    }
}
